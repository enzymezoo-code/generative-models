name: run unit tests

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        requirements-version: ["requirements_pt13", "requirements_pt2"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install cURL Headers
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev

      - name: Install dependencies
        if: matrix.requirements-version == 'requirements_pt13'
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          if [ -f ${{ matrix.requirements-version }}.txt ]; then pip install -r ${{ matrix.requirements-version }}.txt; fi
          echo "Installed pt13"

          git clone https://github.com/ninja-build/ninja.git
          cd ninja
          cmake -Bbuild-cmake
          cmake --build build-cmake
          export PATH=$PATH:$PWD/build-cmake/
          cd ..

          git clone https://github.com/pytorch/data.git pt1-torchdata
          cd pt1-torchdata
          git checkout tags/v0.5.1
          BUILD_S3=1 pip3 install .

      - name: Install dependencies
        if: matrix.requirements-version == 'requirements_pt2'
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          if [ -f ${{ matrix.requirements-version }}.txt ]; then pip install -r ${{ matrix.requirements-version }}.txt; fi
          echo "Installed pt2"

          git clone https://github.com/pytorch/data.git pt2-torchdata
          cd pt2-torchdata
          BUILD_S3=1 pip3 install .
      
      - name: Install pytest
        run: |
          pip install pytest
      - name: Test with pytest
        run: |
          pytest -s --ignore=src/clip --ignore=pt2-torchdata --ignore=pt1-torchdata
